/*
 * FIWARE-NGSI v2 Specification
 * FIWARE-NGSI v2 Specification
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.interiot.fiware.ngsiv2.client.api;

import org.interiot.fiware.ngsiv2.client.ApiException;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OMANGSIOperationsApi
 */
public class OMANGSIOperationsApiTest {

    private final OMANGSIOperationsApi api = new OMANGSIOperationsApi();

    
    /**
     * 
     *
     * (The payload of the v2 notifyContext should be described)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNotifyContextTest() throws ApiException {
        // api.createNotifyContext();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * (The payload of the v2 notifyContextAvailability should be described)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNotifyContextAvailabilityTest() throws ApiException {
        // api.createNotifyContextAvailability();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * (Not needed, as it is covered by the RESTful POST /v2/subscriptions operation)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSubscribeContextTest() throws ApiException {
        // api.createSubscribeContext();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * (Not needed as POJ RPC, but we need to define a RESTful operation for this, analogous to the NGSI10 one)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSubscribeContextAvailabilityTest() throws ApiException {
        // api.createSubscribeContextAvailability();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * (Not needed, as it is covered by the RESTful DELETE /v2/subscriptions operation)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUnsubscribeContextTest() throws ApiException {
        // api.createUnsubscribeContext();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * (Not needed as POJ RPC, but we need to define a RESTful operation for this, analogous to the NGSI10 one)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUnsubscribeContextAvailabilityTest() throws ApiException {
        // api.createUnsubscribeContextAvailability();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * (Not needed as POJ RPC, but we need to define a RESTful operation for this, analogous to the NGSI10 one)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateContextAvailabilitySubscriptionTest() throws ApiException {
        // api.updateContextAvailabilitySubscription();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * (Not needed, as it is covered by the RESTful PATCH /v2/subscriptions operation)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateContextSubscriptionTest() throws ApiException {
        // api.updateContextSubscription();

        // TODO: test validations
    }
    
}
