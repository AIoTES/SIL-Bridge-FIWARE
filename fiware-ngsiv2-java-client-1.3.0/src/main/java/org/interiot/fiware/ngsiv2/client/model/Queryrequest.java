/*
 * FIWARE-NGSI v2 Specification
 * FIWARE-NGSI v2 Specification
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.interiot.fiware.ngsiv2.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * Queryrequest
 */

public class Queryrequest   {
  @SerializedName("entities")
  private List<Object> entities = new ArrayList<Object>();

  @SerializedName("attributes")
  private List<String> attributes = new ArrayList<String>();

  @SerializedName("scopes")
  private List<Object> scopes = new ArrayList<Object>();

  public Queryrequest entities(List<Object> entities) {
    this.entities = entities;
    return this;
  }

  public Queryrequest addEntitiesItem(Object entitiesItem) {
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * Get entities
   * @return entities
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<Object> getEntities() {
    return entities;
  }

  public void setEntities(List<Object> entities) {
    this.entities = entities;
  }

  public Queryrequest attributes(List<String> attributes) {
    this.attributes = attributes;
    return this;
  }

  public Queryrequest addAttributesItem(String attributesItem) {
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<String> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<String> attributes) {
    this.attributes = attributes;
  }

  public Queryrequest scopes(List<Object> scopes) {
    this.scopes = scopes;
    return this;
  }

  public Queryrequest addScopesItem(Object scopesItem) {
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * Get scopes
   * @return scopes
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<Object> getScopes() {
    return scopes;
  }

  public void setScopes(List<Object> scopes) {
    this.scopes = scopes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Queryrequest queryrequest = (Queryrequest) o;
    return Objects.equals(this.entities, queryrequest.entities) &&
        Objects.equals(this.attributes, queryrequest.attributes) &&
        Objects.equals(this.scopes, queryrequest.scopes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entities, attributes, scopes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Queryrequest {\n");
    
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

